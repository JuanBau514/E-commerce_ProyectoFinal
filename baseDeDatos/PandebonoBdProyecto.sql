-- MySQL Script generated by MySQL Workbench
-- Thu May 18 09:41:50 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db TiendaFisica
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `db TiendaFisica` ;

-- -----------------------------------------------------
-- Schema db TiendaFisica
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db TiendaFisica` ;
USE `db TiendaFisica` ;

-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Categoria_Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Categoria_Cliente` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Categoria_Cliente` (
  `idCategoria_Cliente` INT NOT NULL,
  `Nombre_Categoria` VARCHAR(45) NULL,
  PRIMARY KEY (`idCategoria_Cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Cliente` (
  `idCliente` INT NOT NULL,
  `Nombre` VARCHAR(45) NULL,
  `Telefono` INT(20) NULL,
  `Categoria_Cliente_idCategoria_Cliente` INT NOT NULL,
  PRIMARY KEY (`idCliente`, `Categoria_Cliente_idCategoria_Cliente`),
  CONSTRAINT `fk_Cliente_Categoria_Cliente`
    FOREIGN KEY (`Categoria_Cliente_idCategoria_Cliente`)
    REFERENCES `db TiendaFisica`.`Categoria_Cliente` (`idCategoria_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Cliente_Categoria_Cliente_idx` ON `db TiendaFisica`.`Cliente` (`Categoria_Cliente_idCategoria_Cliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Factura_de_Venta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Tienda`.`Factura_de_Venta` ;

CREATE TABLE IF NOT EXISTS `Tienda`.`Factura_de_Venta` (
  `idFactura_de_Venta` INT NOT NULL,
  `Fecha` DATE NULL,
  `Total_a_Pagar` INT NULL,
  `Cliente_idCliente` INT NOT NULL,
  `Cliente_Categoria_Cliente_idCategoria_Cliente` INT NOT NULL,
  PRIMARY KEY (`idFactura_de_Venta`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`),
  CONSTRAINT `fk_Factura_de_Venta_Cliente1`
    FOREIGN KEY (`Cliente_idCliente` , `Cliente_Categoria_Cliente_idCategoria_Cliente`)
    REFERENCES `db TiendaFisica`.`Cliente` (`idCliente` , `Categoria_Cliente_idCategoria_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Factura_de_Venta_Cliente1_idx` ON `db TiendaFisica`.`Factura_de_Venta` (`Cliente_idCliente` ASC, `Cliente_Categoria_Cliente_idCategoria_Cliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Producto` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Producto` (
  `idProducto` INT NOT NULL,
  `Categoria` VARCHAR(45) NULL,
  `Cantidad-especifica` VARCHAR(45) NULL,
  `Precio-venta` VARCHAR(45) NULL,
  `Precio-compra` VARCHAR(45) NULL,
  PRIMARY KEY (`idProducto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Detalle_Facturacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Detalle_Facturacion` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Detalle_Facturacion` (
  `Factura_de_Venta_idFactura_de_Venta` INT NOT NULL,
  `Factura_de_Venta_Cliente_idCliente` INT NOT NULL,
  `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente` INT NOT NULL,
  `Producto_idProducto` INT NOT NULL,
  `Cantidad-Pedido` INT NULL,
  `Total-Pedido` DOUBLE NULL,
  PRIMARY KEY (`Factura_de_Venta_idFactura_de_Venta`, `Factura_de_Venta_Cliente_idCliente`, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`, `Producto_idProducto`),
  CONSTRAINT `fk_Factura_de_Venta_has_Producto_Factura_de_Venta1`
    FOREIGN KEY (`Factura_de_Venta_idFactura_de_Venta` , `Factura_de_Venta_Cliente_idCliente` , `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`)
    REFERENCES `db TiendaFisica`.`Factura_de_Venta` (`idFactura_de_Venta` , `Cliente_idCliente` , `Cliente_Categoria_Cliente_idCategoria_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Factura_de_Venta_has_Producto_Producto1`
    FOREIGN KEY (`Producto_idProducto`)
    REFERENCES `db TiendaFisica`.`Producto` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Factura_de_Venta_has_Producto_Producto1_idx` ON `db TiendaFisica`.`Detalle_Facturacion` (`Producto_idProducto` ASC) VISIBLE;

CREATE INDEX `fk_Factura_de_Venta_has_Producto_Factura_de_Venta1_idx` ON `db TiendaFisica`.`Detalle_Facturacion` (`Factura_de_Venta_idFactura_de_Venta` ASC, `Factura_de_Venta_Cliente_idCliente` ASC, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Proveedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Proveedor` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Proveedor` (
  `idProveedor` INT NOT NULL,
  `NIT` INT NOT NULL,
  `Nombre-Proveedor` VARCHAR(45) NULL,
  `Telefono-Proveedor` INT NULL,
  `Direccion-Proveedor` VARCHAR(45) NULL,
  PRIMARY KEY (`idProveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Factura-de-Compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Factura-de-Compra` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Factura-de-Compra` (
  `idFactura-de-Compra` INT NOT NULL,
  `Fecha-compra` DATE NULL,
  `Total_a_Pagar` DOUBLE NULL,
  `Proveedor_idProveedor` INT NOT NULL,
  PRIMARY KEY (`idFactura-de-Compra`, `Proveedor_idProveedor`),
  CONSTRAINT `fk_Factura-de-Compra_Proveedor1`
    FOREIGN KEY (`Proveedor_idProveedor`)
    REFERENCES `db TiendaFisica`.`Proveedor` (`idProveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Factura-de-Compra_Proveedor1_idx` ON `db TiendaFisica`.`Factura-de-Compra` (`Proveedor_idProveedor` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Detalle de compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Detalle de compra` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Detalle de compra` (
  `Factura-de-Compra_idFactura-de-Compra` INT NOT NULL,
  `Producto_idProducto` INT NOT NULL,
  `Cantidad-producto` INT NULL,
  `Total-por-cada-Producto` DECIMAL NULL,
  PRIMARY KEY (`Factura-de-Compra_idFactura-de-Compra`, `Producto_idProducto`),
  CONSTRAINT `fk_Factura-de-Compra_has_Producto_Factura-de-Compra1`
    FOREIGN KEY (`Factura-de-Compra_idFactura-de-Compra`)
    REFERENCES `db TiendaFisica`.`Factura-de-Compra` (`idFactura-de-Compra`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Factura-de-Compra_has_Producto_Producto1`
    FOREIGN KEY (`Producto_idProducto`)
    REFERENCES `db TiendaFisica`.`Producto` (`idProducto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Factura-de-Compra_has_Producto_Producto1_idx` ON `db TiendaFisica`.`Detalle de compra` (`Producto_idProducto` ASC) VISIBLE;

CREATE INDEX `fk_Factura-de-Compra_has_Producto_Factura-de-Compra1_idx` ON `db TiendaFisica`.`Detalle de compra` (`Factura-de-Compra_idFactura-de-Compra` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Servicio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Servicio` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Servicio` (
  `idServicio` INT NOT NULL,
  `Descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`idServicio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Factura de servicio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Factura de servicio` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Factura de servicio` (
  `idComprobante de servicio` INT NOT NULL,
  `Costo` VARCHAR(45) NULL,
  `Cliente_idCliente` INT NOT NULL,
  `Cliente_Categoria_Cliente_idCategoria_Cliente` INT NOT NULL,
  PRIMARY KEY (`idComprobante de servicio`),
  CONSTRAINT `fk_Factura de servicio_Cliente1`
    FOREIGN KEY (`Cliente_idCliente` , `Cliente_Categoria_Cliente_idCategoria_Cliente`)
    REFERENCES `db TiendaFisica`.`Cliente` (`idCliente` , `Categoria_Cliente_idCategoria_Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Factura de servicio_Cliente1_idx` ON `db TiendaFisica`.`Factura de servicio` (`Cliente_idCliente` ASC, `Cliente_Categoria_Cliente_idCategoria_Cliente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `db TiendaFisica`.`Detalles de servicio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `db TiendaFisica`.`Detalles de servicio` ;

CREATE TABLE IF NOT EXISTS `db TiendaFisica`.`Detalles de servicio` (
  `Servicio_idServicio` INT NOT NULL,
  `Comprobante de servicio_idComprobante de servicio` INT NOT NULL,
  `Descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`Servicio_idServicio`, `Comprobante de servicio_idComprobante de servicio`),
  CONSTRAINT `fk_Servicio_has_Comprobante de servicio_Servicio1`
    FOREIGN KEY (`Servicio_idServicio`)
    REFERENCES `db TiendaFisica`.`Servicio` (`idServicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Servicio_has_Comprobante de servicio_Comprobante de servic1`
    FOREIGN KEY (`Comprobante de servicio_idComprobante de servicio`)
    REFERENCES `db TiendaFisica`.`Factura de servicio` (`idComprobante de servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Servicio_has_Comprobante de servicio_Comprobante de serv_idx` ON `db TiendaFisica`.`Detalles de servicio` (`Comprobante de servicio_idComprobante de servicio` ASC) VISIBLE;

CREATE INDEX `fk_Servicio_has_Comprobante de servicio_Servicio1_idx` ON `db TiendaFisica`.`Detalles de servicio` (`Servicio_idServicio` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Categoria_Cliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Categoria_Cliente` (`idCategoria_Cliente`, `Nombre_Categoria`) VALUES (CC001, 'Frecuente');
INSERT INTO `db TiendaFisica`.`Categoria_Cliente` (`idCategoria_Cliente`, `Nombre_Categoria`) VALUES (CC002, 'Ocacional');

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Cliente`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Cliente` (`idCliente`, `Nombre`, `Telefono`, `Categoria_Cliente_idCategoria_Cliente`) VALUES (C001, 'Juan Vanegas', 3003628355, CC001);
INSERT INTO `db TiendaFisica`.`Cliente` (`idCliente`, `Nombre`, `Telefono`, `Categoria_Cliente_idCategoria_Cliente`) VALUES (C002, 'Romulo Caicedo', 3108609553, CC002);
INSERT INTO `db TiendaFisica`.`Cliente` (`idCliente`, `Nombre`, `Telefono`, `Categoria_Cliente_idCategoria_Cliente`) VALUES (C003, 'Stik Melano', 3124421751, CC002);
INSERT INTO `db TiendaFisica`.`Cliente` (`idCliente`, `Nombre`, `Telefono`, `Categoria_Cliente_idCategoria_Cliente`) VALUES (C004, 'Orlando Tisquesuza', 31423533735, CC002);
INSERT INTO `db TiendaFisica`.`Cliente` (`idCliente`, `Nombre`, `Telefono`, `Categoria_Cliente_idCategoria_Cliente`) VALUES (C005, 'Miguel Castillo', 3238166058, CC001);

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Factura_de_Venta`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Factura_de_Venta` (`idFactura_de_Venta`, `Fecha`, `Total_a_Pagar`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FV001, '15-03-23', 20000, C001, CC001);
INSERT INTO `db TiendaFisica`.`Factura_de_Venta` (`idFactura_de_Venta`, `Fecha`, `Total_a_Pagar`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FV002, '7-11-22', 15000, C002, CC002);
INSERT INTO `db TiendaFisica`.`Factura_de_Venta` (`idFactura_de_Venta`, `Fecha`, `Total_a_Pagar`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FV003, '14-2-23', 50000, C003, CC002);
INSERT INTO `db TiendaFisica`.`Factura_de_Venta` (`idFactura_de_Venta`, `Fecha`, `Total_a_Pagar`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FV004, '30-12-22', 36400, C004, CC002);
INSERT INTO `db TiendaFisica`.`Factura_de_Venta` (`idFactura_de_Venta`, `Fecha`, `Total_a_Pagar`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FV005, '24-7-23', 10000, C005, CC001);

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Producto`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Producto` (`idProducto`, `Categoria`, `Cantidad-especifica`, `Precio-venta`, `Precio-compra`) VALUES (0001, 'Audifonos', '50', '20000', '14000');
INSERT INTO `db TiendaFisica`.`Producto` (`idProducto`, `Categoria`, `Cantidad-especifica`, `Precio-venta`, `Precio-compra`) VALUES (0002, 'Protectores celular', '78', '20000', '10000');
INSERT INTO `db TiendaFisica`.`Producto` (`idProducto`, `Categoria`, `Cantidad-especifica`, `Precio-venta`, `Precio-compra`) VALUES (0003, 'PowerBank', '20', '50000', '40000');
INSERT INTO `db TiendaFisica`.`Producto` (`idProducto`, `Categoria`, `Cantidad-especifica`, `Precio-venta`, `Precio-compra`) VALUES (0004, 'Aro de luz', '10', '16000', '8000');
INSERT INTO `db TiendaFisica`.`Producto` (`idProducto`, `Categoria`, `Cantidad-especifica`, `Precio-venta`, `Precio-compra`) VALUES (0005, 'Cable USB', '15', '10000', '6000');

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Detalle_Facturacion`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Detalle_Facturacion` (`Factura_de_Venta_idFactura_de_Venta`, `Factura_de_Venta_Cliente_idCliente`, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`, `Producto_idProducto`, `Cantidad-Pedido`, `Total-Pedido`) VALUES (FV001, C001, CC001, 0001, 1, 20000);
INSERT INTO `db TiendaFisica`.`Detalle_Facturacion` (`Factura_de_Venta_idFactura_de_Venta`, `Factura_de_Venta_Cliente_idCliente`, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`, `Producto_idProducto`, `Cantidad-Pedido`, `Total-Pedido`) VALUES (FV002, C002, CC002, 0002, 2, 40000);
INSERT INTO `db TiendaFisica`.`Detalle_Facturacion` (`Factura_de_Venta_idFactura_de_Venta`, `Factura_de_Venta_Cliente_idCliente`, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`, `Producto_idProducto`, `Cantidad-Pedido`, `Total-Pedido`) VALUES (FV003, C003, CC002, 0003, 5, 250000);
INSERT INTO `db TiendaFisica`.`Detalle_Facturacion` (`Factura_de_Venta_idFactura_de_Venta`, `Factura_de_Venta_Cliente_idCliente`, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`, `Producto_idProducto`, `Cantidad-Pedido`, `Total-Pedido`) VALUES (FV004, C004, CC002, 0004, 7, 112000);
INSERT INTO `db TiendaFisica`.`Detalle_Facturacion` (`Factura_de_Venta_idFactura_de_Venta`, `Factura_de_Venta_Cliente_idCliente`, `Factura_de_Venta_Cliente_Categoria_Cliente_idCategoria_Cliente`, `Producto_idProducto`, `Cantidad-Pedido`, `Total-Pedido`) VALUES (FV005, C005, CC001, 0005, 2, 20000);

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Proveedor`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Proveedor` (`idProveedor`, `NIT`, `Nombre-Proveedor`, `Telefono-Proveedor`, `Direccion-Proveedor`) VALUES (P1, 1234567899, 'JBL', 3259872654, 'calle-25-sur');
INSERT INTO `db TiendaFisica`.`Proveedor` (`idProveedor`, `NIT`, `Nombre-Proveedor`, `Telefono-Proveedor`, `Direccion-Proveedor`) VALUES (P2, 1234567888, 'Ysmartphone', 3284571215, 'calle-21-norte');
INSERT INTO `db TiendaFisica`.`Proveedor` (`idProveedor`, `NIT`, `Nombre-Proveedor`, `Telefono-Proveedor`, `Direccion-Proveedor`) VALUES (P3, 1234569877, 'Hometly', 3134568524, 'calle-22-occidente');
INSERT INTO `db TiendaFisica`.`Proveedor` (`idProveedor`, `NIT`, `Nombre-Proveedor`, `Telefono-Proveedor`, `Direccion-Proveedor`) VALUES (P4, 9874561233, 'Teknopolis', 3148759642, 'calle-23-oriente');
INSERT INTO `db TiendaFisica`.`Proveedor` (`idProveedor`, `NIT`, `Nombre-Proveedor`, `Telefono-Proveedor`, `Direccion-Proveedor`) VALUES (P5, 5467891235, 'ArticulosAltagama', 3125896471, 'calle-69-centro');

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Factura-de-Compra`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Factura-de-Compra` (`idFactura-de-Compra`, `Fecha-compra`, `Total_a_Pagar`, `Proveedor_idProveedor`) VALUES (FC001, '01-02-23', 500000, P1);
INSERT INTO `db TiendaFisica`.`Factura-de-Compra` (`idFactura-de-Compra`, `Fecha-compra`, `Total_a_Pagar`, `Proveedor_idProveedor`) VALUES (FC002, '15-06-22', 450000, P2);
INSERT INTO `db TiendaFisica`.`Factura-de-Compra` (`idFactura-de-Compra`, `Fecha-compra`, `Total_a_Pagar`, `Proveedor_idProveedor`) VALUES (FC003, '25-11-22', 210000, P3);
INSERT INTO `db TiendaFisica`.`Factura-de-Compra` (`idFactura-de-Compra`, `Fecha-compra`, `Total_a_Pagar`, `Proveedor_idProveedor`) VALUES (FC004, '12-12-19', 1000000, P4);
INSERT INTO `db TiendaFisica`.`Factura-de-Compra` (`idFactura-de-Compra`, `Fecha-compra`, `Total_a_Pagar`, `Proveedor_idProveedor`) VALUES (FC005, '26-4-23', 700530, P5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Detalle de compra`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Detalle de compra` (`Factura-de-Compra_idFactura-de-Compra`, `Producto_idProducto`, `Cantidad-producto`, `Total-por-cada-Producto`) VALUES (FC001, 0001, 12, 168000);
INSERT INTO `db TiendaFisica`.`Detalle de compra` (`Factura-de-Compra_idFactura-de-Compra`, `Producto_idProducto`, `Cantidad-producto`, `Total-por-cada-Producto`) VALUES (FC002, 0002, 24, 240000);
INSERT INTO `db TiendaFisica`.`Detalle de compra` (`Factura-de-Compra_idFactura-de-Compra`, `Producto_idProducto`, `Cantidad-producto`, `Total-por-cada-Producto`) VALUES (FC003, 0003, 13, 520000);
INSERT INTO `db TiendaFisica`.`Detalle de compra` (`Factura-de-Compra_idFactura-de-Compra`, `Producto_idProducto`, `Cantidad-producto`, `Total-por-cada-Producto`) VALUES (FC004, 0004, 27, 216000);
INSERT INTO `db TiendaFisica`.`Detalle de compra` (`Factura-de-Compra_idFactura-de-Compra`, `Producto_idProducto`, `Cantidad-producto`, `Total-por-cada-Producto`) VALUES (FC005, 0005, 11, 66000);

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Servicio`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Servicio` (`idServicio`, `Descripcion`) VALUES (S001, 'Reparacion');
INSERT INTO `db TiendaFisica`.`Servicio` (`idServicio`, `Descripcion`) VALUES (S002, 'Mantenimineto');

COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Factura de servicio`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Factura de servicio` (`idComprobante de servicio`, `Costo`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FS001, '35000', C001, CC001);
INSERT INTO `db TiendaFisica`.`Factura de servicio` (`idComprobante de servicio`, `Costo`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FS002, '23500', C002, CC002);
INSERT INTO `db TiendaFisica`.`Factura de servicio` (`idComprobante de servicio`, `Costo`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FS003, '72900', C003, CC002);
INSERT INTO `db TiendaFisica`.`Factura de servicio` (`idComprobante de servicio`, `Costo`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FS004, '50000', C004, CC002);
INSERT INTO `db TiendaFisica`.`Factura de servicio` (`idComprobante de servicio`, `Costo`, `Cliente_idCliente`, `Cliente_Categoria_Cliente_idCategoria_Cliente`) VALUES (FS005, '86750', C005, CC001);
2
COMMIT;


-- -----------------------------------------------------
-- Data for table `db TiendaFisica`.`Detalles de servicio`
-- -----------------------------------------------------
START TRANSACTION;
USE `db TiendaFisica`;
INSERT INTO `db TiendaFisica`.`Detalles de servicio` (`Servicio_idServicio`, `Comprobante de servicio_idComprobante de servicio`, `Descripcion`) VALUES (S001, FS001, 'Cambio display Samsug');
INSERT INTO `db TiendaFisica`.`Detalles de servicio` (`Servicio_idServicio`, `Comprobante de servicio_idComprobante de servicio`, `Descripcion`) VALUES (S002, FS002, 'Mantenimiento general pc Hp');
INSERT INTO `db TiendaFisica`.`Detalles de servicio` (`Servicio_idServicio`, `Comprobante de servicio_idComprobante de servicio`, `Descripcion`) VALUES (S002, FS003, 'Limpieza celular xiaomi');
INSERT INTO `db TiendaFisica`.`Detalles de servicio` (`Servicio_idServicio`, `Comprobante de servicio_idComprobante de servicio`, `Descripcion`) VALUES (S002, FS004, 'Cambio pasta termica lenovo');
INSERT INTO `db TiendaFisica`.`Detalles de servicio` (`Servicio_idServicio`, `Comprobante de servicio_idComprobante de servicio`, `Descripcion`) VALUES (S001, FS005, 'Cambio puerto de carga iphone ');

COMMIT;




